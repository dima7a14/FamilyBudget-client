{"version":3,"sources":["router/routes.ts","layouts/App/index.tsx","views/Home/index.tsx","views/Auth/styles.ts","views/Auth/SignIn.tsx","views/Auth/SignUp.tsx","views/Auth/index.tsx","views/Accounts/index.tsx","views/Transactions/Transaction.tsx","views/Transactions/index.tsx","views/Reports/index.tsx","views/NotFound/index.tsx","router/index.tsx","layouts/BaseLayout/Sidebar/styles.ts","theme/dimensions.ts","layouts/BaseLayout/Sidebar/index.tsx","layouts/BaseLayout/styles.ts","layouts/BaseLayout/index.tsx","serviceWorker.ts","index.tsx","stores/accounts.ts"],"names":["home","name","path","title","signIn","signUp","accounts","transactions","reports","hot","module","Home","useStyles","makeStyles","theme","paper","margin","spacing","padding","display","flexDirection","alignItems","position","left","formWidth","maxWidth","signInAvatar","backgroundColor","palette","warning","light","signUpAvatar","success","main","form","marginTop","submit","link","textDecoration","textAlign","color","grey","forms","transformStyle","width","height","signInEnter","opacity","transform","signInEnterActive","transition","signInExit","signInExitActive","signUpEnter","signUpEnterActive","signUpExit","signUpExitActive","SignIn","classes","Paper","elevation","className","Avatar","Typography","component","variant","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","Button","Grid","container","item","xs","to","routes","SignUp","Auth","location","useLocation","console","log","pathname","CSSTransition","in","unmountOnExit","timeout","classNames","enter","enterActive","exit","exitActive","Accounts","Transaction","transaction","currentAccount","useStore","accountsStore","data","account","amount","currency","categories","Transactions","useEffect","map","t","key","Reports","NotFound","Routes","exact","drawerPaper","whiteSpace","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","toolbar","justifyContent","mixins","avatar","getContrastText","indigo","menuItems","icon","htmlColor","text","enabled","Sidebar","open","onToggle","history","useHistory","Drawer","IconButton","onClick","Divider","List","i","ListItem","button","selected","push","disabled","ListItemIcon","ListItemText","primary","root","background","appBar","zIndex","drawer","appBarShift","marginLeft","appBarSpacer","paddingRight","toolbarIcon","menuButton","marginRight","menuButtonHidden","flexGrow","content","overflow","paddingTop","paddingBottom","one","two","three","BaseLayout","children","useState","loading","setLoading","setAccounts","setOpen","handleSidebarStatus","currentPage","find","r","AppBar","Toolbar","edge","aria-label","noWrap","Container","Boolean","window","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","createStoreObject","createApi","state","payload"],"mappings":"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","file":"static/js/main.25d5b1b9.chunk.js","sourcesContent":["export default {\n  home: {\n    name: 'home',\n    path: '/',\n    title: 'Home page'\n  },\n  signIn: {\n    name: 'signIn',\n    path: '/sign-in',\n    title: 'Sign In'\n  },\n  signUp: {\n    name: 'signUp',\n    path: '/sign-up',\n    title: 'Sign Up'\n  },\n  accounts: {\n    name: 'accounts',\n    path: '/accounts',\n    title: 'Accounts',\n  },\n  transactions: {\n    name: 'transactions',\n    path: '/transactions',\n    title: 'Transactions'\n  },\n  reports: {\n    name: 'reports',\n    path: '/reports',\n    title: 'Reports'\n  }\n};\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { hot } from 'react-hot-loader';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { Routes } from 'router';\nimport BaseLayout from '../BaseLayout';\n\n\nconst App: React.FC = () => (\n  <BrowserRouter>\n    <CssBaseline />\n    <BaseLayout>\n      <Routes />\n    </BaseLayout>\n  </BrowserRouter>\n);\n\nexport default hot(module)(App);\n","import React from 'react';\n\n\nconst Home: React.FC = () => <div>Home page</div>;\n\nexport default Home;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst transition = 'all 500ms';\nconst slide = '100px';\nconst formWidth = 300;\n\nexport const useStyles = makeStyles(theme => ({\n  paper: {\n    margin: theme.spacing(8),\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    position: 'absolute',\n    left: `calc(50% - ${formWidth / 2}px)`,\n    maxWidth: formWidth,\n  },\n  signInAvatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.warning.light,\n  },\n  signUpAvatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.success.main,\n  },\n  form: {\n    marginTop: theme.spacing(1),\n    \n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  link: {\n    display: 'block',\n    textDecoration: 'none',\n    textAlign: 'center',\n    color: theme.palette.grey['700'],\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n  forms: {\n    transformStyle: 'preserve-3d',\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n  },\n  signInEnter: {\n    opacity: 0,\n    transform: `translate(-${slide})`,\n  },\n  signInEnterActive: {\n    opacity: 1,\n    transform: 'translate(0)',\n    transition,\n  },\n  signInExit: {\n    opacity: 1,\n    transform: 'translate(0)',\n  },\n  signInExitActive: {\n    opacity: 0,\n    transform: `translate(-${slide})`,\n    transition,\n  },\n  signUpEnter: {\n    opacity: 0,\n    transform: `translate(${slide})`,\n  },\n  signUpEnterActive: {\n    opacity: 1,\n    transform: 'translate(0)',\n    transition,\n  },\n  signUpExit: {\n    opacity: 1,\n    transform: 'translate(0)',\n  },\n  signUpExitActive: {\n    opacity: 0,\n    transform: `translate(${slide})`,\n    transition,\n  },\n}));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport routes from 'router/routes';\n\nimport { useStyles } from './styles';\n\n\nconst SignIn: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={4} className={classes.paper}>\n      <Avatar className={classes.signInAvatar}>\n        <LockOutlinedIcon />\n      </Avatar>\n      <Typography component=\"h2\" variant=\"h5\">\n        Sign in\n      </Typography>\n      <form className={classes.form} noValidate>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          autoFocus\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n        <FormControlLabel control={<Checkbox value=\"remember\" color=\"primary\" />} label=\"Remember me\" />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Sign In\n        </Button>\n        <Grid container>\n          <Grid item xs>\n            <Link to={routes.signUp.path} className={classes.link}>\n              Don't have an account? Sign Up\n            </Link>\n          </Grid>\n        </Grid>\n      </form>\n    </Paper>\n  );\n};\n\nexport default SignIn;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nimport routes from 'router/routes';\n\nimport { useStyles } from './styles';\n\n\nconst SignUp: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={4} className={classes.paper}>\n      <Avatar className={classes.signUpAvatar}>\n        <AccountCircleIcon />\n      </Avatar>\n      <Typography component=\"h2\" variant=\"h5\">\n        Sign up\n      </Typography>\n      <form className={classes.form} noValidate>\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"username\"\n          label=\"Username\"\n          name=\"username\"\n          autoComplete=\"username\"\n          autoFocus\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n        <FormControlLabel control={<Checkbox value=\"remember\" color=\"primary\" />} label=\"Remember me\" />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Sign up\n        </Button>\n        <Grid container>\n          <Grid item xs>\n            <Link to={routes.signIn.path} className={classes.link}>\n              Already have an account? Sign In\n            </Link>\n          </Grid>\n        </Grid>\n      </form>\n    </Paper>\n  );\n};\n\nexport default SignUp;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport routes from 'router/routes';\n\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport { useStyles } from './styles';\n\nconst Auth: React.FC = () => {\n  const location = useLocation();\n  const classes = useStyles();\n\n  console.log('path', location.pathname)\n\n  return (\n    <div className={classes.forms}>\n      <CSSTransition\n        in={location.pathname === routes.signIn.path}\n        unmountOnExit\n        timeout={500}\n        classNames={{\n          enter: classes.signInEnter,\n          enterActive: classes.signInEnterActive,\n          exit: classes.signInExit,\n          exitActive: classes.signInExitActive,\n        }}\n      >\n        <SignIn />\n      </CSSTransition>\n      <CSSTransition\n        in={location.pathname === routes.signUp.path}\n        unmountOnExit\n        timeout={500}\n        classNames={{\n          enter: classes.signUpEnter,\n          enterActive: classes.signUpEnterActive,\n          exit: classes.signUpExit,\n          exitActive: classes.signUpExitActive,\n        }}\n      >\n        <SignUp />\n      </CSSTransition>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\n\nconst Accounts: React.FC = () => <div>Accounts page</div>;\n\nexport default Accounts;\n","import React from 'react';\nimport { useStore } from 'effector-react';\n\nimport accountsStore from 'stores/accounts';\n\n// todo move from this page\ninterface TransactionInt {\n  id: string;\n  amount: number;\n  account: string;\n  categories: string[];\n}\n\nconst Transaction: React.FC<{ transaction: TransactionInt }> = ({ transaction }) => {\n  const accounts = useStore(accountsStore);\n  const currentAccount = accounts.data[transaction.account];\n\n  return (\n    <div>\n      ammount: {transaction.amount}, currency {currentAccount.currency}\n    </div>\n  );\n};\n\n\nexport default Transaction;\n","import React, { useEffect } from 'react';\n\nimport Transaction from './Transaction';\n// import DefaultLayout from 'layouts/Default';\n\n// import Table from './Table';\n\n// const Transactions: React.FC = () => {\n//   return (\n//     <DefaultLayout>\n//       <Table />\n//     </DefaultLayout>\n//   );\n// };\n\nconst transactions = [{\n  id: '1',\n  account: 'one',\n  categories: [],\n  amount: 24.25\n}, {\n  id: '2',\n  account: 'two',\n  categories: [],\n  amount: 0.5\n}, {\n  id: '3',\n  account: 'three',\n  categories: [],\n  amount: 69\n}];\n\nconst Transactions: React.FC = () => {\n  useEffect(() => {\n    // todo add load of transactions\n  });\n\n  return (\n    <div>\n      Transactions\n      {transactions.map(t => (\n        <Transaction key={t.id} transaction={t} />\n      ))}\n    </div>\n  );\n};\n\nexport default Transactions;\n","import React from 'react';\n\nconst Reports: React.FC = () => <div>Reports</div>;\n\nexport default Reports;\n","import React from 'react';\n\n\nconst NotFound: React.FC = () => <div>Not found</div>;\n\nexport default NotFound;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport BaseLayout from 'layouts/BaseLayout';\nimport Home from 'views/Home';\nimport Auth from 'views/Auth';\nimport Accounts from 'views/Accounts';\nimport Transactions from 'views/Transactions';\nimport Reports from 'views/Reports';\nimport NotFound from 'views/NotFound';\nimport routes from './routes';\n\nexport const Routes: React.FC = () => (\n  <Switch>\n    <Route path={routes.home.path} title={routes.home.title} exact component={Home} />\n    <Route path={[routes.signIn.path, routes.signUp.path]} component={Auth} />\n    <Route path={routes.accounts.path} component={Accounts} />\n    <Route path={routes.transactions.path} component={Transactions} />\n    <Route path={routes.reports.path} component={Reports} />\n    <Route path=\"*\" component={NotFound} />\n  </Switch>\n);\n","import { makeStyles } from '@material-ui/core/styles';\nimport { indigo } from '@material-ui/core/colors';\n\nimport { sidebarWidth } from 'theme/dimensions';\n\nexport const useStyles = makeStyles(theme => ({\n  drawerPaper: {\n    backgroundColor: '#fff',\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: sidebarWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  avatar: {\n    color: theme.palette.getContrastText(indigo[500]),\n    backgroundColor: indigo[500],\n  },\n}));\n","export const sidebarWidth = 240;\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Avatar from '@material-ui/core/Avatar';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport ViewCompactIcon from '@material-ui/icons/ViewCompact';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport routes from 'router/routes';\nimport { useStyles } from './styles';\n\n\nconst menuItems = [\n  {\n    icon: <ViewCompactIcon htmlColor=\"#3b3b3b\" />,\n    text: routes.transactions.title,\n    link: routes.transactions.path,\n    enabled: true,\n  },\n  {\n    icon: <AccountBalanceWalletIcon htmlColor=\"#3b3b3b\" />,\n    text: routes.accounts.title,\n    link: routes.accounts.path,\n    enabled: true,\n  },\n  {\n    icon: <EqualizerIcon htmlColor=\"#3b3b3b\" />,\n    text: routes.reports.title,\n    link: routes.reports.path,\n    enabled: true,\n  },\n];\n\ninterface IProps {\n  open: boolean;\n  onToggle(): void;\n}\n\nconst Sidebar: React.FC<IProps> = ({ open, onToggle }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  return (\n    <Drawer\n      open={open}\n      variant=\"permanent\"\n      classes={{\n        paper: classNames(classes.drawerPaper, !open && classes.drawerPaperClose),\n      }}\n    >\n      <div className={classes.toolbar}>\n        <Avatar className={classes.avatar}>U</Avatar>\n        <IconButton onClick={onToggle}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        {menuItems.map(i => (\n          <ListItem\n            key={i.link}\n            button\n            selected={i.link === location.pathname}\n            onClick={() => history.push(i.link)}\n            disabled={!i.enabled}\n          >\n            <ListItemIcon>{i.icon}</ListItemIcon>\n            <ListItemText primary={i.text} />\n          </ListItem>\n        ))}\n      </List>\n    </Drawer>\n  );\n};\n\nexport default Sidebar;\n","import { makeStyles } from '@material-ui/core/styles';\n\nimport { sidebarWidth } from 'theme/dimensions';\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    height: '100vh',\n    background: '#f5f5f5',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: sidebarWidth,\n    width: `calc(100% - ${sidebarWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  content: {\n    flexGrow: 1,\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n","import React, {useEffect, useState} from 'react';\nimport { Switch, Route, useHistory, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\nimport map from 'lodash/map';\nimport find from 'lodash/find';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport ViewCompactIcon from '@material-ui/icons/ViewCompact';\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport routes from 'router/routes';\nimport { setAccounts } from 'stores/accounts';\nimport Sidebar from './Sidebar';\nimport { useStyles } from './styles';\n\nconst accounts = {\n  one: {\n    id: 'one',\n    name: 'Account one',\n    currency: 'UAN',\n  },\n  two: {\n    id: 'two',\n    name: 'Account two',\n    currency: 'EUR',\n  },\n  three: {\n    id: 'three',\n    name: 'Account three',\n    currency: 'USD'\n  },\n};\n\n\nconst BaseLayout: React.FC = ({ children }) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (loading) {\n      setAccounts(accounts);\n      setLoading(false);\n    }\n  });\n\n  const [open, setOpen] = useState(false);\n  const handleSidebarStatus = () => {\n    setOpen(!open);\n  };\n  const location = useLocation();\n  const currentPage = find(routes, r => r.path === location.pathname);\n  if (loading) {\n    return null;\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"absolute\"\n        className={classNames(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open sidebar\"\n            onClick={handleSidebarStatus}\n            className={classNames(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            {currentPage ? currentPage.title : 'Budget'}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Sidebar open={open} onToggle={handleSidebarStatus} />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          {children}\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nexport default BaseLayout;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Index is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'layouts/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStoreObject, createApi } from 'effector';\n\ninterface Account {\n  id: string;\n  currency: string;\n  name: string;\n}\n\nconst initialState: {\n  data: Record<string, Account>;\n  loading: boolean;\n} = {\n  data: {},\n  loading: false,\n};\n\nconst accounts = createStoreObject(initialState);\n\nconst { setAccounts } = createApi(accounts, {\n  setAccounts: (state, payload: Record<string, Account>) => ({\n    ...state,\n    data: payload,\n  }),\n});\n\nexport { setAccounts };\nexport default accounts;\n"],"sourceRoot":""}